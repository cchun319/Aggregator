{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Aggregator - runtime analysis\
Chun Chang\
\
1. parsefeed\
==============================\
Logic: go through every links in feeds\
F: feeds in the list\
L: average number of links in a feed\
M: average number of characters in a link\
\
O(F*L*M)\
\
2. buildIndex\
==============================\
Logic: go through every terms in every documents,\
Then go through the set of terms corresponding to a doc to calculate the TFIDF\
\
D: number of documents\
T: average number of terms in a docs\
S: average size of terms set of a doc\
\
O(D* T + D*S)\
\
3. buildInvertedIndex\
==============================\
Logic: go through the terms set in every documents,\
And sorted by TFIDF or by lexicographic order of name of documents\
\
D: number of documents\
S: average size of terms set of a doc\
\
Assume number of unique terms in all docs will not larger than D * S\
\
O(D*S + D*S*D*log(D))\
\
4. buildHomePage\
==============================\
Logic: go through every terms in every documents,\
And sorted the list with size of set of documents, or by lexicographic order\
\
D: number of documents\
T: average number of terms in a docs\
\
Assume number of unique terms in all docs will not larger than D * T\
\
O(D* T + D*T*log(D*T))\
\
5. createAutocompleteFile\
==============================\
Logic: go through the terms sets of all documents,\
And sorted the list by lexicographic order\
Then write to newly created file\
\
D: number of documents\
T: average number of terms in a docs\
L: average size of a terms\
\
Assume number of unique terms in all docs will not larger than D * T\
\
O(D* T + D*T*log(D*T) + D* T *S)\
\
5. searchArticles\
==============================\
Logic: copy and return the lists corresponding to the query terms \
\
D: average number of documents to a term\
\
O(D)\
\
}